{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "CardControllerApi",
      "description": "API для работы с картами"
    },
    {
      "name": "UserControllerApi",
      "description": "API для работы с пользователями и авторизацией"
    },
    {
      "name": "AdminControllerApi",
      "description": "API для работы администратора"
    }
  ],
  "paths": {
    "/api/v1/user": {
      "get": {
        "tags": [
          "UserControllerApi"
        ],
        "summary": "Получение пользователей",
        "description": "Этот метод позволяет получить список пользователей с необязательной фильтрацией по username",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "partOfUsername",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователи успешно получены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "UserControllerApi"
        ],
        "summary": "Регистрация пользователя в системе",
        "description": "Этот метод позволяет зарегистрироваться в системе",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Аккаунт создан",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "UserControllerApi"
        ],
        "summary": "Вход в систему",
        "description": "Этот метод позволяет войти в систему и получить JWT-токен",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponseDto"
                }
              }
            }
          },
          "200": {
            "description": "Вход выполнен успешно",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/card/transfer": {
      "post": {
        "tags": [
          "CardControllerApi"
        ],
        "summary": "Отправить деньги между своими счетами",
        "description": "Этот метод позволяет отправить деньги между своими счетами",
        "operationId": "transferMoney",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardTransferRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "418": {
            "description": "Недостаточно средств для совершения операции"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "400": {
            "description": "Некорректные данные запроса"
          },
          "200": {
            "description": "Деньги успешно переведены"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/card/block/{id}": {
      "post": {
        "tags": [
          "CardControllerApi"
        ],
        "summary": "Запрос на блокировку карты",
        "description": "Этот метод позволяет отправить запрос на блокировку карты",
        "operationId": "requestToBlockCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Запрос успешно отправлен",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Карта не существует",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/card": {
      "get": {
        "tags": [
          "AdminControllerApi"
        ],
        "summary": "Получить список карт",
        "description": "Этот метод позволяет получить список карт общий, или по конкретному пользователю\nс фильтрацией по статусам",
        "operationId": "getCards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "BLOCKED",
                  "EXPIRED"
                ]
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          },
          "200": {
            "description": "Карты успешно получены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не существует",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AdminControllerApi"
        ],
        "summary": "Создание карты пользователю",
        "description": "Этот метод позволяет создать карту для пользователя",
        "operationId": "createCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "201": {
            "description": "Карта успешно создана",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/block/{id}": {
      "post": {
        "tags": [
          "AdminControllerApi"
        ],
        "summary": "Заблокировать карту",
        "description": "Этот метод позволяет заблокировать карту пользователя",
        "operationId": "blockCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Карта не найдена"
          },
          "200": {
            "description": "Карта успешно заблокирована"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "400": {
            "description": "Некорректные данные запроса"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/active/{id}": {
      "post": {
        "tags": [
          "AdminControllerApi"
        ],
        "summary": "Активировать карту",
        "description": "Этот метод позволяет активировать карту пользователя, которая заблокирована или просрочена",
        "operationId": "activeCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expiryDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карта успешно активирована"
          },
          "404": {
            "description": "Карта не найдена"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "400": {
            "description": "Некорректные данные запроса"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/card": {
      "get": {
        "tags": [
          "CardControllerApi"
        ],
        "summary": "Получить список моих карт",
        "description": "Этот метод позволяет получить мои карты",
        "operationId": "getMyCards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "BLOCKED",
                  "EXPIRED"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          },
          "200": {
            "description": "Карты успешно получены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCardSmallResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/card/{id}": {
      "get": {
        "tags": [
          "CardControllerApi"
        ],
        "summary": "Получить информацию по карте",
        "description": "Этот метод позволяет получить детальную информацию по карте",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о карте получена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CardHugeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CardHugeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CardHugeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Карта не существует",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CardHugeResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CardControllerApi"
        ],
        "summary": "Удалить карту",
        "description": "Этот метод позволяет удалить карту",
        "operationId": "deleteCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "400": {
            "description": "Некорректные данные запроса"
          },
          "200": {
            "description": "Карта успешно удалена"
          },
          "404": {
            "description": "Карта не существует"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/requestsToBlock": {
      "get": {
        "tags": [
          "AdminControllerApi"
        ],
        "summary": "Получить список запросов на блокировку",
        "description": "Этот метод позволяет получить список запросов на блокировку карт",
        "operationId": "getRequests",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Запросы успешно получены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageRequestToBlockResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageRequestToBlockResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageRequestToBlockResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/user/{id}": {
      "delete": {
        "tags": [
          "UserControllerApi"
        ],
        "summary": "Удаление профиля пользователя",
        "description": "Этот метод позволяет удалить аккаунт пользователя из системы",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Пользователь не найден"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "400": {
            "description": "Некорректные данные запроса"
          },
          "200": {
            "description": "Пользователь удалён"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "password": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "firstName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "lastName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "patronymicName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          }
        },
        "required": [
          "firstName",
          "lastName",
          "password",
          "patronymicName",
          "username"
        ]
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "JwtResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CardTransferRequestDto": {
        "type": "object",
        "properties": {
          "fromCard": {
            "type": "string",
            "format": "uuid"
          },
          "toCard": {
            "type": "string",
            "format": "uuid"
          },
          "money": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          }
        },
        "required": [
          "fromCard",
          "toCard"
        ]
      },
      "CardRequestDto": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PageUserResponseDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sortnull"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageablenull"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "Pageablenull": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/Sortnull"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "Sortnull": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN"
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          }
        }
      },
      "CardSmallResponseDto": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "cardNumber": {
            "type": "string"
          },
          "cardStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "BLOCKED",
              "EXPIRED"
            ]
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PageCardSmallResponseDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardSmallResponseDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sortnull"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageablenull"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "CardHugeResponseDto": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "cardNumb": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "BLOCKED",
              "EXPIRED"
            ]
          },
          "money": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PageRequestToBlockResponseDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestToBlockResponseDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sortnull"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageablenull"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "RequestToBlockResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}